{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","alignLinks","brand","href","centerChildren","id","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","carouselId","images","dist","duration","fullWidth","indicators","noWrap","numVisible","onCycleTo","padding","shift","s","m","closeIcon","header","image","reveal","waves","revealIcon","title","alt","src","Facebook","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gSAuKeA,MAhJf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,SAAD,CACEC,WAAW,QACXC,MACE,uBAAGF,UAAU,aAAaG,KAAK,KAA/B,QAIFC,gBAAc,EACdC,GAAG,aACHC,SAAU,kBAAC,OAAD,aACVC,QAAS,CACPC,WAAW,EACXC,KAAM,OACNC,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,IACbC,kBAAkB,IAGpB,kBAAC,UAAD,CAASb,KAAK,IAAd,mBACA,kBAAC,UAAD,CAASA,KAAK,mBAAd,eAEF,kBAAC,WAAD,CACEc,WAAW,aACXC,OAAQ,CACN,wCACA,wCACA,wCACA,wCACA,yCAEFX,QAAS,CACPY,MAAO,IACPC,SAAU,IACVC,WAAW,EACXC,YAAY,EACZC,QAAQ,EACRC,WAAY,EACZC,UAAW,KACXC,QAAS,EACTC,MAAO,KAGX,6BACA,6BACA,kBAAC,MAAD,CAAK3B,UAAU,aACb,kBAAC,MAAD,CAAKA,UAAU,mBAAmB4B,EAAG,GACnC,kBAAC,MAAD,KACE,kBAAC,MAAD,CAAKC,EAAG,GAAID,EAAG,IACb,kBAAC,OAAD,CACEE,UAAW,kBAAC,OAAD,cACXC,OACE,kBAAC,YAAD,CACEC,MAAM,iDACNC,QAAM,EACNC,MAAM,UAGVD,OACE,sHAKFE,WAAY,kBAAC,OAAD,kBACZC,MAAM,cAEN,2BACE,uBAAGjC,KAAK,KAAR,uBAMV,kBAAC,MAAD,CAAKH,UAAU,mBAAmB4B,EAAG,GACnC,kBAAC,MAAD,KACE,kBAAC,MAAD,CAAKC,EAAG,GAAID,EAAG,IACb,kBAAC,aAAD,KACE,kBAAC,iBAAD,CAAgB5B,UAAU,UACxB,yBACEqC,IAAI,GACJrC,UAAU,SACVsC,IAAI,+CAEN,0BAAMtC,UAAU,SAAhB,SACA,2BACA,kBAAC,IAAD,MADA,uBAC+B,6BAD/B,eAIA,uBAAGA,UAAU,oBAAoBG,KAAK,sBACpC,kBAAC,OAAD,gBAGJ,kBAAC,iBAAD,CAAgBH,UAAU,UACxB,kBAAC,OAAD,CAAMA,UAAU,UAAhB,UACA,0BAAMA,UAAU,SAAhB,SACA,wCAEE,6BAFF,eAKA,uBAAGA,UAAU,oBAAoBG,KAAK,sBACpC,kBAAC,OAAD,gBAGJ,kBAAC,iBAAD,CAAgBH,UAAU,UACxB,kBAAC,OAAD,CAAMA,UAAU,gBAAhB,gBACA,0BAAMA,UAAU,SAAhB,SACA,wCAEE,6BAFF,eAKA,uBAAGA,UAAU,oBAAoBG,KAAK,sBACpC,kBAACoC,EAAA,EAAD,QAGJ,kBAAC,iBAAD,CAAgBvC,UAAU,UACxB,kBAAC,OAAD,CAAMA,UAAU,cAAhB,cACA,0BAAMA,UAAU,SAAhB,SACA,wCAEE,6BAFF,eAKA,uBAAGA,UAAU,oBAAoBG,KAAK,+BC9IpCqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5750784f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"materialize-css\"; // It installs the JS asset only\nimport '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"react-materialize\";\nimport {\n  Card,\n  CardTitle,\n  Carousel,\n  Col,\n  Collection,\n  CollectionItem,\n  Icon,\n  Navbar,\n  NavItem,\n  Row,\n  Tab,\n  Tabs,\n} from \"react-materialize\";\nimport { Facebook } from \"@material-ui/icons\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar\n        alignLinks=\"right\"\n        brand={\n          <a className=\"brand-logo\" href=\"#\">\n            Logo\n          </a>\n        }\n        centerChildren\n        id=\"mobile-nav\"\n        menuIcon={<Icon>menu</Icon>}\n        options={{\n          draggable: true,\n          edge: \"left\",\n          inDuration: 250,\n          onCloseEnd: null,\n          onCloseStart: null,\n          onOpenEnd: null,\n          onOpenStart: null,\n          outDuration: 200,\n          preventScrolling: true,\n        }}\n      >\n        <NavItem href=\"\">Getting started</NavItem>\n        <NavItem href=\"components.html\">Components</NavItem>\n      </Navbar>\n      <Carousel\n        carouselId=\"Carousel-2\"\n        images={[\n          \"https://picsum.photos/200/300?image=0\",\n          \"https://picsum.photos/200/300?image=1\",\n          \"https://picsum.photos/200/300?image=2\",\n          \"https://picsum.photos/200/300?image=3\",\n          \"https://picsum.photos/200/300?image=4\",\n        ]}\n        options={{\n          dist: -100,\n          duration: 200,\n          fullWidth: false,\n          indicators: false,\n          noWrap: false,\n          numVisible: 5,\n          onCycleTo: null,\n          padding: 0,\n          shift: 0,\n        }}\n      />\n      <br />\n      <br />\n      <Row className=\"container\">\n        <Col className=\"white black-text\" s={6}>\n          <Row>\n            <Col m={12} s={12}>\n              <Card\n                closeIcon={<Icon>close</Icon>}\n                header={\n                  <CardTitle\n                    image=\"https://materializecss.com/images/sample-1.jpg\"\n                    reveal\n                    waves=\"light\"\n                  />\n                }\n                reveal={\n                  <p>\n                    Here is some more information about this product that is\n                    only revealed once clicked on.\n                  </p>\n                }\n                revealIcon={<Icon>more_vert</Icon>}\n                title=\"Card Title\"\n              >\n                <p>\n                  <a href=\"#\">This is a link</a>\n                </p>\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n        <Col className=\"white black-text\" s={6}>\n          <Row>\n            <Col m={12} s={12}>\n              <Collection>\n                <CollectionItem className=\"avatar\">\n                  <img\n                    alt=\"\"\n                    className=\"circle\"\n                    src=\"https://materializecss.com/images/yuna.jpg\"\n                  />\n                  <span className=\"title\">Title</span>\n                  <p>\n                  <MenuIcon/>                    <br />\n                    Second Line\n                  </p>\n                  <a className=\"secondary-content\" href=\"javascript:void(0)\">\n                    <Icon>grade</Icon>\n                  </a>\n                </CollectionItem>\n                <CollectionItem className=\"avatar\">\n                  <Icon className=\"circle\">folder</Icon>\n                  <span className=\"title\">Title</span>\n                  <p>\n                    First Line\n                    <br />\n                    Second Line\n                  </p>\n                  <a className=\"secondary-content\" href=\"javascript:void(0)\">\n                    <Icon>grade</Icon>\n                  </a>\n                </CollectionItem>\n                <CollectionItem className=\"avatar\">\n                  <Icon className=\"circle green\">insert_chart</Icon>\n                  <span className=\"title\">Title</span>\n                  <p>\n                    First Line\n                    <br />\n                    Second Line\n                  </p>\n                  <a className=\"secondary-content\" href=\"javascript:void(0)\">\n                    <Facebook/>\n                  </a>\n                </CollectionItem>\n                <CollectionItem className=\"avatar\">\n                  <Icon className=\"circle red\">play_arrow</Icon>\n                  <span className=\"title\">Title</span>\n                  <p>\n                    First Line\n                    <br />\n                    Second Line\n                  </p>\n                  <a className=\"secondary-content\" href=\"javascript:void(0)\">\n                  \n                  </a>\n                </CollectionItem>\n              </Collection>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}